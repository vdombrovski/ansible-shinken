---

- name: Update services - Arbiter
  lineinfile:
    dest: "{{ config_dir }}/arbiters/arbiter-master.cfg"
    state: present
    regexp: '.*[^#] modules.*'
    line: "    modules {{ mods['arbiter'] if mods['arbiter'] else [] | join(',') }}"

- name: Update services - Broker
  lineinfile:
    dest: "{{ config_dir }}/brokers/broker-master.cfg"
    state: present
    regexp: '.*[^#] modules.*'
    line: "    modules {{ mods['broker'] if mods['broker'] else [] | join(',') }}"

- name: Update services - Scheduler
  lineinfile:
    dest: "{{ config_dir }}/schedulers/scheduler-master.cfg"
    state: present
    regexp: '.*[^#] modules.*'
    line: "    modules {{ mods['scheduler'] if mods['scheduler'] else [] | join(',') }}"

# Use Systemd when possible

- name: Setup Systemd unit for arbiter
  when: "ansible_service_mgr == 'systemd'"
  template:
    dest=/lib/systemd/system/shinken-arbiter.service
    src=systemd/shinken-arbiter.service.j2

- name: Setup Systemd units for other services
  when: "ansible_service_mgr == 'systemd'"
  with_items: "['scheduler', 'reactionner', 'broker', 'poller', 'receiver']"
  template:
    dest=/lib/systemd/system/shinken-{{item}}.service
    src=systemd/shinken-service.service.j2

- name: Setup Shinken target
  when: "ansible_service_mgr == 'systemd'"
  template:
    dest=/lib/systemd/system/shinken.target
    src=systemd/shinken.target

- name: Enable Systemd units
  when: "ansible_service_mgr == 'systemd'"
  command: /usr/bin/systemd enable shinken.target

- name: Start Systemd units
  when: "ansible_service_mgr == 'systemd'"
  command: /usr/bin/systemd start shinken.target

- name: Restart Shinken
  debug:
    msg: "Setup completed"
  changed_when: True
  notify:
    - Validate Configuration
    - restart shinken
    - restart shinken systemd
